package com.sia.scheduler.log.worker.service;import com.sia.core.constant.Constant;import com.sia.core.entity.JobMTask;import com.sia.scheduler.context.SpringContext;import com.sia.scheduler.log.enums.LogStatusEnum;import com.sia.scheduler.service.JobLogService;import com.sia.scheduler.service.TaskLogService;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class LogConsumeService {    private static final Logger LOGGER = LoggerFactory.getLogger(LogConsumeService.class);    public static void jobStartScheduling(JobMTask mTask){        LOGGER.info(Constant.LOG_PREFIX + "Begin consume job: traceId = {}", mTask.getTraceId());        JobLogService jobLogService = SpringContext.getJobLogService();        jobLogService.insertJobLogAndTaskLog4Consumer(mTask);    }    public static void recordTaskLog(JobMTask jobMTask, LogStatusEnum status, String result){        LOGGER.info(Constant.LOG_PREFIX + "Middle consume tasks: traceId = {}", jobMTask.getTraceId());        TaskLogService taskLogService = SpringContext.getTaskLogService();        taskLogService.recordTaskLog4Consumer(jobMTask, status, result);    }    public static void recordJobFinishedLogs(JobMTask jobMTask, LogStatusEnum status){        LOGGER.info(Constant.LOG_PREFIX + "End consume job: traceId = {}", jobMTask.getTraceId());        JobLogService jobLogService = SpringContext.getJobLogService();        jobLogService.updateJobLog4Consumer(jobMTask, status);    }}